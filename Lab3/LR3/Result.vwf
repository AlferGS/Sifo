/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 100.0us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 100000.0;
	SIMULATION_TIME = 100000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("Write")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Read")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Rom/Ram")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Address")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Address[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Address";
}

SIGNAL("Address[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Address";
}

SIGNAL("Address[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Address";
}

SIGNAL("Address[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Address";
}

SIGNAL("Address[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Address";
}

SIGNAL("Address[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Address";
}

SIGNAL("Out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Out";
}

SIGNAL("Out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Out";
}

SIGNAL("Out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Out";
}

SIGNAL("Out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Out";
}

SIGNAL("Out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Out";
}

SIGNAL("Out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Out";
}

SIGNAL("Out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Out";
}

SIGNAL("Out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Out";
}

SIGNAL("buff1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff3[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff3[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff3[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff3[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff3[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff3[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff3[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff3[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff4[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff4[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff4[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff4[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff4[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff4[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff4[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff4[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff5[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff5[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff5[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff5[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff5[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff5[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff5[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff5[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff6[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff6[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff6[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff6[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff6[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff6[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff6[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff6[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff_in[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff_in[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff_in[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff_in[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff_in[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff_in[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff_in[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff_in[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("count_write[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("count_write[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("count_write[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("delay[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("delay[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("delay[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("delay[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

GROUP("buff1")
{
	MEMBERS = "buff1[7]", "buff1[6]", "buff1[5]", "buff1[4]", "buff1[3]", "buff1[2]", "buff1[1]", "buff1[0]";
}

GROUP("buff2")
{
	MEMBERS = "buff2[7]", "buff2[6]", "buff2[5]", "buff2[4]", "buff2[3]", "buff2[2]", "buff2[1]", "buff2[0]";
}

GROUP("buff3")
{
	MEMBERS = "buff3[7]", "buff3[6]", "buff3[5]", "buff3[4]", "buff3[3]", "buff3[2]", "buff3[1]", "buff3[0]";
}

GROUP("buff4")
{
	MEMBERS = "buff4[7]", "buff4[6]", "buff4[5]", "buff4[4]", "buff4[3]", "buff4[2]", "buff4[1]", "buff4[0]";
}

GROUP("buff5")
{
	MEMBERS = "buff5[7]", "buff5[6]", "buff5[5]", "buff5[4]", "buff5[3]", "buff5[2]", "buff5[1]", "buff5[0]";
}

GROUP("buff6")
{
	MEMBERS = "buff6[7]", "buff6[6]", "buff6[5]", "buff6[4]", "buff6[3]", "buff6[2]", "buff6[1]", "buff6[0]";
}

GROUP("buff_in")
{
	MEMBERS = "buff_in[7]", "buff_in[6]", "buff_in[5]", "buff_in[4]", "buff_in[3]", "buff_in[2]", "buff_in[1]", "buff_in[0]";
}

GROUP("count_write")
{
	MEMBERS = "count_write[2]", "count_write[1]", "count_write[0]";
}

GROUP("delay")
{
	MEMBERS = "delay[3]", "delay[2]", "delay[1]", "delay[0]";
}

TRANSITION_LIST("Write")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 410.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 99110.0;
	}
}

TRANSITION_LIST("Read")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 310.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 430.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 98880.0;
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 24;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			NODE
			{
				REPEAT = 5;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 4960;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("Rom/Ram")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 99860.0;
	}
}

TRANSITION_LIST("Address[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("Address[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("Address[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 770.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 98880.0;
	}
}

TRANSITION_LIST("Address[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 170.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 270.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 170.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 98880.0;
	}
}

TRANSITION_LIST("Address[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 230.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 98880.0;
	}
}

TRANSITION_LIST("Address[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 230.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 98900.0;
	}
}

TRANSITION_LIST("Out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL Z FOR 90.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 98880.0;
	}
}

TRANSITION_LIST("Out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL Z FOR 90.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 98880.0;
	}
}

TRANSITION_LIST("Out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL Z FOR 90.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 98880.0;
	}
}

TRANSITION_LIST("Out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL Z FOR 90.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 98880.0;
	}
}

TRANSITION_LIST("Out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL Z FOR 90.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 98880.0;
	}
}

TRANSITION_LIST("Out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 90.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 98880.0;
	}
}

TRANSITION_LIST("Out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 90.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 98880.0;
	}
}

TRANSITION_LIST("Out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL Z FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 90.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 98880.0;
	}
}

TRANSITION_LIST("buff1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("buff1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("buff1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("buff1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("buff1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("buff1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 420.0;
		LEVEL 0 FOR 99550.0;
	}
}

TRANSITION_LIST("buff1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 420.0;
		LEVEL 0 FOR 99550.0;
	}
}

TRANSITION_LIST("buff1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 420.0;
		LEVEL 0 FOR 99550.0;
	}
}

TRANSITION_LIST("buff2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1030.0;
		LEVEL X FOR 98970.0;
	}
}

TRANSITION_LIST("buff2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1030.0;
		LEVEL X FOR 98970.0;
	}
}

TRANSITION_LIST("buff2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1030.0;
		LEVEL X FOR 98970.0;
	}
}

TRANSITION_LIST("buff2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1030.0;
		LEVEL X FOR 98970.0;
	}
}

TRANSITION_LIST("buff2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1030.0;
		LEVEL X FOR 98970.0;
	}
}

TRANSITION_LIST("buff2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 420.0;
		LEVEL 0 FOR 560.0;
		LEVEL X FOR 98970.0;
	}
}

TRANSITION_LIST("buff2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 420.0;
		LEVEL 0 FOR 560.0;
		LEVEL X FOR 98970.0;
	}
}

TRANSITION_LIST("buff2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1030.0;
		LEVEL X FOR 98970.0;
	}
}

TRANSITION_LIST("buff3[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("buff3[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("buff3[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("buff3[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("buff3[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("buff3[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 980.0;
		LEVEL 0 FOR 98950.0;
	}
}

TRANSITION_LIST("buff3[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 98950.0;
	}
}

TRANSITION_LIST("buff3[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 980.0;
		LEVEL 0 FOR 98950.0;
	}
}

TRANSITION_LIST("buff4[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("buff4[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("buff4[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("buff4[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("buff4[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("buff4[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 980.0;
		LEVEL 0 FOR 98930.0;
	}
}

TRANSITION_LIST("buff4[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 510.0;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 98930.0;
	}
}

TRANSITION_LIST("buff4[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("buff5[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("buff5[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("buff5[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("buff5[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("buff5[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("buff5[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 530.0;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 98910.0;
	}
}

TRANSITION_LIST("buff5[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 420.0;
		LEVEL 0 FOR 99470.0;
	}
}

TRANSITION_LIST("buff5[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 980.0;
		LEVEL 0 FOR 98910.0;
	}
}

TRANSITION_LIST("buff6[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("buff6[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("buff6[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("buff6[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("buff6[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("buff6[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 550.0;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 98890.0;
	}
}

TRANSITION_LIST("buff6[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 420.0;
		LEVEL 0 FOR 99450.0;
	}
}

TRANSITION_LIST("buff6[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("buff_in[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 310.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 430.0;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 98880.0;
	}
}

TRANSITION_LIST("buff_in[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 310.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 430.0;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 98880.0;
	}
}

TRANSITION_LIST("buff_in[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 310.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 430.0;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 98880.0;
	}
}

TRANSITION_LIST("buff_in[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 310.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 430.0;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 98880.0;
	}
}

TRANSITION_LIST("buff_in[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 310.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 430.0;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 98880.0;
	}
}

TRANSITION_LIST("buff_in[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 310.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 430.0;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 98880.0;
	}
}

TRANSITION_LIST("buff_in[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 310.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 430.0;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 98880.0;
	}
}

TRANSITION_LIST("buff_in[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL Z FOR 310.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL Z FOR 430.0;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 90.0;
		LEVEL Z FOR 98880.0;
	}
}

TRANSITION_LIST("count_write[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 99720.0;
	}
}

TRANSITION_LIST("count_write[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 99680.0;
	}
}

TRANSITION_LIST("count_write[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 220.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 99660.0;
	}
}

TRANSITION_LIST("delay[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 270.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 99650.0;
	}
}

TRANSITION_LIST("delay[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 190.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 99730.0;
	}
}

TRANSITION_LIST("delay[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 150.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 99650.0;
	}
}

TRANSITION_LIST("delay[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 99650.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Address";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7;
}

DISPLAY_LINE
{
	CHANNEL = "Address[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "Address[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "Address[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "Address[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "Address[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "Address[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "Out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
	CHILDREN = 9, 10, 11, 12, 13, 14, 15, 16;
}

DISPLAY_LINE
{
	CHANNEL = "Out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "Out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "Out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "Out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "Out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "Out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "Out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "Out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "Read";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Write";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Rom/Ram";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "buff_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
	CHILDREN = 21, 22, 23, 24, 25, 26, 27, 28;
}

DISPLAY_LINE
{
	CHANNEL = "buff_in[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "buff_in[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "buff_in[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "buff_in[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "buff_in[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "buff_in[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "buff_in[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "buff_in[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "buff1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 29;
	TREE_LEVEL = 0;
	CHILDREN = 30, 31, 32, 33, 34, 35, 36, 37;
}

DISPLAY_LINE
{
	CHANNEL = "buff1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "buff1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "buff1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "buff1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "buff1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "buff1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "buff1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "buff1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "buff2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 38;
	TREE_LEVEL = 0;
	CHILDREN = 39, 40, 41, 42, 43, 44, 45, 46;
}

DISPLAY_LINE
{
	CHANNEL = "buff2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "buff2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "buff2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "buff2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "buff2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "buff2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "buff2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "buff2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "buff3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 47;
	TREE_LEVEL = 0;
	CHILDREN = 48, 49, 50, 51, 52, 53, 54, 55;
}

DISPLAY_LINE
{
	CHANNEL = "buff3[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "buff3[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "buff3[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "buff3[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "buff3[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "buff3[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "buff3[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "buff3[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "buff4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 56;
	TREE_LEVEL = 0;
	CHILDREN = 57, 58, 59, 60, 61, 62, 63, 64;
}

DISPLAY_LINE
{
	CHANNEL = "buff4[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "buff4[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "buff4[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "buff4[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "buff4[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "buff4[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "buff4[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "buff4[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "buff5";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 65;
	TREE_LEVEL = 0;
	CHILDREN = 66, 67, 68, 69, 70, 71, 72, 73;
}

DISPLAY_LINE
{
	CHANNEL = "buff5[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "buff5[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "buff5[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "buff5[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "buff5[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "buff5[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "buff5[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "buff5[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "buff6";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 74;
	TREE_LEVEL = 0;
	CHILDREN = 75, 76, 77, 78, 79, 80, 81, 82;
}

DISPLAY_LINE
{
	CHANNEL = "buff6[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 74;
}

DISPLAY_LINE
{
	CHANNEL = "buff6[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 74;
}

DISPLAY_LINE
{
	CHANNEL = "buff6[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 74;
}

DISPLAY_LINE
{
	CHANNEL = "buff6[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 74;
}

DISPLAY_LINE
{
	CHANNEL = "buff6[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 74;
}

DISPLAY_LINE
{
	CHANNEL = "buff6[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 74;
}

DISPLAY_LINE
{
	CHANNEL = "buff6[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 74;
}

DISPLAY_LINE
{
	CHANNEL = "buff6[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 74;
}

DISPLAY_LINE
{
	CHANNEL = "count_write";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 83;
	TREE_LEVEL = 0;
	CHILDREN = 84, 85, 86;
}

DISPLAY_LINE
{
	CHANNEL = "count_write[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 83;
}

DISPLAY_LINE
{
	CHANNEL = "count_write[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 83;
}

DISPLAY_LINE
{
	CHANNEL = "count_write[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 83;
}

DISPLAY_LINE
{
	CHANNEL = "delay";
	EXPAND_STATUS = EXPANDED;
	RADIX = ASCII;
	TREE_INDEX = 87;
	TREE_LEVEL = 0;
	CHILDREN = 88, 89, 90, 91;
}

DISPLAY_LINE
{
	CHANNEL = "delay[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 87;
}

DISPLAY_LINE
{
	CHANNEL = "delay[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 87;
}

DISPLAY_LINE
{
	CHANNEL = "delay[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 87;
}

DISPLAY_LINE
{
	CHANNEL = "delay[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 87;
}

TIME_BAR
{
	TIME = 310000;
	MASTER = TRUE;
}
;
